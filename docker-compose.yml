version: '3.8'

services:
  auth_service:
    container_name: authentication_service
    build:
      context: ./pastebin_authentication_service/
    env_file:
      - ./pastebin_authentication_service/.env.test
    ports:
      - "81:81"
    depends_on:
      - auth_db
    command: sh -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 81"
  auth_db:
    container_name: db_authentication_service
    image: postgres:15
    volumes:
      - auth_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DB=pastebin_authentication_service
    command: ["postgres", "-c", "port=5400"]
  hash_generator:
    container_name: hash_generator_service
    build:
      context: ./pastebin_hash_generator/
    restart: unless-stopped
    env_file:
      - ./pastebin_hash_generator/.env.test
    ports:
      - "82:82"
    depends_on:
      - rabbitmq
      - redis
    command: sh -c "uvicorn app.main:app --host 0.0.0.0 --port 82"
  rabbitmq:
    container_name: hash_rabbitmq
    image: rabbitmq:3.13-management
    hostname: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    ports:
      - "5672:5672"
      - "15672:15672"
  pastebin_nginx:
    container_name: nginx
    build:
      context: ./nginx
    ports:
      - "80:80"
    depends_on:
      - auth_service
  web:
    container_name: main_service
    build:
      context: .
      dockerfile: pastebin/Dockerfile
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    ports:
      - 8000:8000
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
      - memcached
      - rabbitmq
  db:
    container_name: main_db
    image: postgres:15
    volumes:
     - main_data:/var/lib/postgresql/data/
    environment:
     - POSTGRES_USER=root
     - POSTGRES_PASSWORD=1234
     - POSTGRES_DB=pastebin
    ports:
      - "5432:5432"
  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
  memcached:
    container_name: memcached
    image: memcached:latest
    ports:
      - "11211:11211"
  celery:
    container_name: celery
    build:
      context: .
      dockerfile: pastebin/Dockerfile
    command: bash -c "celery -A notes worker -P eventlet --loglevel=info"
    env_file:
      - ./.env
    depends_on:
      - redis
      - web
  celery_beat_autodelete:
    container_name: celery_beat
    build:
      context: .
      dockerfile: pastebin/Dockerfile
    command: bash -c "celery -A notes beat -l info"
    env_file:
      - ./.env
    depends_on:
      - redis
      - web
      - celery
volumes:
  main_data:
  auth_data: